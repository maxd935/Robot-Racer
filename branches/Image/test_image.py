from ImageClass import Image
import unittest
import cv2


class ImageTest(unittest.TestCase):

    def setUp(self):
        self.tailleImageX = 50
        self.image = Image("img.jpg")
        self.img = cv2.imread("img.jpg", cv2.IMREAD_COLOR)
        self.surex = Image("surex.jpg")
        self.srx = cv2.imread("surex.jpg", cv2.IMREAD_COLOR)
        self.noLigne = Image("noLigne.jpg")
        self.nlg = cv2.imread("noLigne.jpg", cv2.IMREAD_COLOR)
        self.camh1 = Image("newLigne/cam_haute_1.jpg")
        self.ch1 = cv2.imread("newLigne/cam_haute_1.jpg", cv2.IMREAD_COLOR)
        self.camh2 = Image("newLigne/cam_haute_2.jpg")
        self.ch2 = cv2.imread("newLigne/cam_haute_2.jpg", cv2.IMREAD_COLOR)
        self.camh3 = Image("newLigne/cam_haute_3.jpg")
        self.ch3 = cv2.imread("newLigne/cam_haute_3.jpg", cv2.IMREAD_COLOR)
        self.camh4 = Image("newLigne/cam_haute_4.jpg")
        self.ch4 = cv2.imread("newLigne/cam_haute_4.jpg", cv2.IMREAD_COLOR)
        self.camh5 = Image("newLigne/cam_haute_5.jpg")
        self.ch5 = cv2.imread("newLigne/cam_haute_5.jpg", cv2.IMREAD_COLOR)
        self.camh6 = Image("newLigne/cam_haute_6.jpg")
        self.ch6 = cv2.imread("newLigne/cam_haute_6.jpg", cv2.IMREAD_COLOR)
        self.camh7 = Image("newLigne/cam_haute_7.jpg")
        self.ch7 = cv2.imread("newLigne/cam_haute_7.jpg", cv2.IMREAD_COLOR)
        self.camh8 = Image("newLigne/cam_haute_8.jpg")
        self.ch8 = cv2.imread("newLigne/cam_haute_8.jpg", cv2.IMREAD_COLOR)
        self.camh9 = Image("newLigne/cam_haute_9.jpg")
        self.ch9 = cv2.imread("newLigne/cam_haute_9.jpg", cv2.IMREAD_COLOR)
        self.camh10 = Image("newLigne/cam_haute_10.jpg")
        self.ch10 = cv2.imread("newLigne/cam_haute_10.jpg", cv2.IMREAD_COLOR)
        self.camh11 = Image("newLigne/cam_haute_11.jpg")
        self.ch11 = cv2.imread("newLigne/cam_haute_11.jpg", cv2.IMREAD_COLOR)
        self.camh12 = Image("newLigne/cam_haute_12.jpg")
        self.ch12 = cv2.imread("newLigne/cam_haute_12.jpg", cv2.IMREAD_COLOR)
        self.camh13 = Image("newLigne/cam_haute_13.jpg")
        self.ch13 = cv2.imread("newLigne/cam_haute_13.jpg", cv2.IMREAD_COLOR)
        self.camh14 = Image("newLigne/cam_haute_14.jpg")
        self.ch14 = cv2.imread("newLigne/cam_haute_14.jpg", cv2.IMREAD_COLOR)
        self.camh15 = Image("newLigne/cam_haute_15.jpg")
        self.ch15 = cv2.imread("newLigne/cam_haute_15.jpg", cv2.IMREAD_COLOR)
        self.camh16 = Image("newLigne/cam_haute_16.jpg")
        self.ch16 = cv2.imread("newLigne/cam_haute_16.jpg", cv2.IMREAD_COLOR)
        self.camh17 = Image("newLigne/cam_haute_17.jpg")
        self.ch17 = cv2.imread("newLigne/cam_haute_17.jpg", cv2.IMREAD_COLOR)

    def test_traitement(self):  # OK
        self.assertTrue(self.image.traitement())
        self.assertTrue(self.noLigne.traitement())
        self.assertTrue(self.surex.traitement())
        self.assertTrue(self.camh1.traitement())
        self.assertTrue(self.camh2.traitement())
        self.assertTrue(self.camh3.traitement())
        self.assertTrue(self.camh4.traitement())
        self.assertTrue(self.camh5.traitement())
        self.assertTrue(self.camh6.traitement())
        self.assertTrue(self.camh7.traitement())
        self.assertTrue(self.camh8.traitement())
        self.assertTrue(self.camh9.traitement())
        self.assertTrue(self.camh10.traitement())
        self.assertTrue(self.camh11.traitement())
        self.assertTrue(self.camh12.traitement())
        self.assertTrue(self.camh13.traitement())
        self.assertTrue(self.camh14.traitement())
        self.assertTrue(self.camh15.traitement())
        self.assertTrue(self.camh16.traitement())
        self.assertTrue(self.camh17.traitement())

    def test_getImage(self):  # OK
        self.assertEqual(cv2.cvtColor(self.img, cv2.COLOR_BGR2GRAY).all(), self.image.getImage().all())
        self.assertEqual(cv2.cvtColor(self.srx, cv2.COLOR_BGR2GRAY).all(), self.surex.getImage().all())
        self.assertEqual(cv2.cvtColor(self.nlg, cv2.COLOR_BGR2GRAY).all(), self.noLigne.getImage().all())
        self.assertEqual(cv2.cvtColor(self.ch1, cv2.COLOR_BGR2GRAY).all(), self.camh1.getImage().all())
        self.assertEqual(cv2.cvtColor(self.ch1, cv2.COLOR_BGR2GRAY).all(), self.camh2.getImage().all())
        self.assertEqual(cv2.cvtColor(self.ch1, cv2.COLOR_BGR2GRAY).all(), self.camh3.getImage().all())
        self.assertEqual(cv2.cvtColor(self.ch1, cv2.COLOR_BGR2GRAY).all(), self.camh4.getImage().all())
        self.assertEqual(cv2.cvtColor(self.ch1, cv2.COLOR_BGR2GRAY).all(), self.camh5.getImage().all())
        self.assertEqual(cv2.cvtColor(self.ch1, cv2.COLOR_BGR2GRAY).all(), self.camh6.getImage().all())
        self.assertEqual(cv2.cvtColor(self.ch1, cv2.COLOR_BGR2GRAY).all(), self.camh7.getImage().all())
        self.assertEqual(cv2.cvtColor(self.ch1, cv2.COLOR_BGR2GRAY).all(), self.camh8.getImage().all())
        self.assertEqual(cv2.cvtColor(self.ch1, cv2.COLOR_BGR2GRAY).all(), self.camh9.getImage().all())
        self.assertEqual(cv2.cvtColor(self.ch1, cv2.COLOR_BGR2GRAY).all(), self.camh10.getImage().all())
        self.assertEqual(cv2.cvtColor(self.ch1, cv2.COLOR_BGR2GRAY).all(), self.camh11.getImage().all())
        self.assertEqual(cv2.cvtColor(self.ch1, cv2.COLOR_BGR2GRAY).all(), self.camh12.getImage().all())
        self.assertEqual(cv2.cvtColor(self.ch1, cv2.COLOR_BGR2GRAY).all(), self.camh13.getImage().all())
        self.assertEqual(cv2.cvtColor(self.ch1, cv2.COLOR_BGR2GRAY).all(), self.camh14.getImage().all())
        self.assertEqual(cv2.cvtColor(self.ch1, cv2.COLOR_BGR2GRAY).all(), self.camh15.getImage().all())
        self.assertEqual(cv2.cvtColor(self.ch1, cv2.COLOR_BGR2GRAY).all(), self.camh16.getImage().all())
        self.assertEqual(cv2.cvtColor(self.ch1, cv2.COLOR_BGR2GRAY).all(), self.camh17.getImage().all())

    def test_resizeImage(self):     # NO
        self.image.resizeImage()
        tailleImageY = len(self.img) * self.tailleImageX / len(self.img[0])
        img2 = cv2.resize(self.img, (self.tailleImageX, int(tailleImageY)))
        self.assertEqual(self.image.getImage().all(), img2.all())

        self.surex.resizeImage()
        tailleImageY = len(self.srx) * self.tailleImageX / len(self.srx[0])
        srx2 = cv2.resize(self.srx, (self.tailleImageX, int(tailleImageY)))
        self.assertEqual(self.surex.getImage().all(), srx2.all())

        self.noLigne.resizeImage()
        tailleImageY = len(self.nlg) * self.tailleImageX / len(self.nlg[0])
        nln2 = cv2.resize(self.nlg, (self.tailleImageX, int(tailleImageY)))
        self.assertEqual(self.noLigne.getImage().all(), nln2.all())

        self.camh1.resizeImage()    # NO
        tailleImageY = len(self.ch1) * self.tailleImageX / len(self.ch1[0])
        ch1 = cv2.resize(self.ch1, (self.tailleImageX, int(tailleImageY)))
        self.assertEqual(self.camh1.getImage().all(), ch1.all())


    def test_isSurex(self):     # OK
        self.assertTrue(self.surex.isSurex())
        self.assertFalse(self.image.isSurex())
        self.assertTrue(self.noLigne.isSurex())

        self.assertTrue(self.camh1.isSurex())
        self.assertFalse(self.camh2.isSurex())
        self.assertTrue(self.camh3.isSurex())
        self.assertTrue(self.camh4.isSurex())
        self.assertFalse(self.camh5.isSurex())
        self.assertFalse(self.camh6.isSurex())
        self.assertFalse(self.camh7.isSurex())
        self.assertFalse(self.camh8.isSurex())
        self.assertFalse(self.camh9.isSurex())
        self.assertFalse(self.camh10.isSurex())
        self.assertFalse(self.camh11.isSurex())
        self.assertFalse(self.camh12.isSurex())
        self.assertFalse(self.camh13.isSurex())
        self.assertTrue(self.camh14.isSurex())
        self.assertTrue(self.camh15.isSurex())
        self.assertTrue(self.camh16.isSurex())
        self.assertFalse(self.camh17.isSurex())

    def test_isFin(self):     # OK
        self.assertTrue(self.noLigne.isFin())
        self.assertFalse(self.image.isFin())
        self.assertFalse(self.surex.isFin())

        self.assertFalse(self.camh1.isFin())
        self.assertFalse(self.camh2.isFin())
        self.assertFalse(self.camh3.isFin())
        self.assertFalse(self.camh4.isFin())
        self.assertFalse(self.camh5.isFin())
        self.assertFalse(self.camh6.isFin())
        self.assertFalse(self.camh7.isFin())
        self.assertTrue(self.camh8.isFin())
        self.assertFalse(self.camh9.isFin())
        self.assertFalse(self.camh10.isFin())
        self.assertFalse(self.camh11.isFin())
        self.assertFalse(self.camh12.isFin())
        self.assertFalse(self.camh13.isFin())
        self.assertFalse(self.camh14.isFin())
        self.assertFalse(self.camh15.isFin())
        self.assertFalse(self.camh16.isFin())
        self.assertFalse(self.camh17.isFin())
